{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACC,SAASC,EAAcC,EAAUC,GAC9B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAAWC,IAC/BA,EAAMC,iBACN,MAAMC,EAAQC,OAAOH,EAAMI,OAAOC,SAAShB,MAAMiB,OAC3CC,EAAOJ,OAAOH,EAAMI,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOH,EAAMI,OAAOC,SAASG,OAAOF,OAEnD,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAGhCtB,EAFiBsB,EACIP,GAASO,EAAI,GAAKF,GAEpCG,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAE/DwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA0B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  const form = document.querySelector('.form');\n  form.addEventListener('submit', (event) => {\n    event.preventDefault();\n    const delay = Number(event.target.elements.delay.value);\n    const step = Number(event.target.elements.step.value);\n    const amount = Number(event.target.elements.amount.value);\n\n    for (let i = 1; i <= amount; i++) {\n      const position = i;\n      const promiseDelay = delay + (i - 1) * step;\n      createPromise(position, promiseDelay)\n        .then(({ position, delay }) => {\n         Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  });"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","elements","value","step","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.fd304299.js.map"}